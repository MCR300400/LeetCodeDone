# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def mergeTwoLists(self, list1, list2):
        """
        :type list1: Optional[ListNode]
        :type list2: Optional[ListNode]
        :rtype: Optional[ListNode]
        """
        if list1 == None and list2 == None:
            return list1
        if list1 == None:
            return list2
        if list2 == None:
            return list1
        s1 = list1
        s2 = list2
        all = []
        while s1 != None:
            all.append(s1.val)
            s1 = s1.next
        while s2 != None:
            all.append(s2.val)
            s2 = s2.next
        all.sort()
        l = len(all)
        res = ListNode(all[0])
        boh = res
        for i in range(1,l):
            res.next = ListNode(all[i])
            res = res.next
        return boh
            
