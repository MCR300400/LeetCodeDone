class Solution(object):
    def threeSum(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        n = len(nums)
        nums.sort()
        res = []
    
        for i in range(n-2):
            # skip duplicates for i
            if i > 0 and nums[i] == nums[i-1]:
                continue
        
            # two-pointer approach
            j, k = i+1, n-1
            while j < k:
                s = nums[i] + nums[j] + nums[k]
                if s < 0:
                    j += 1
                elif s > 0:
                    k -= 1
                else:
                    # found a triplet
                    res.append([nums[i], nums[j], nums[k]])
                    # skip duplicates for j and k
                    while j < k and nums[j] == nums[j+1]:
                        j += 1
                    while j < k and nums[k] == nums[k-1]:
                        k -= 1
                    j += 1
                    k -= 1
                
        return res
