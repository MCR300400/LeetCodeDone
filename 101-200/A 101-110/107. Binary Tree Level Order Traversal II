# Definition for a binary tree node.
 # class TreeNode(object):
 #     def __init__(self, val=0, left=None, right=None):
 #         self.val = val
 #         self.left = left
 #         self.right = right
class Solution(object):
    lista = []
    def levelOrderBottom(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        self.lista = []
        if root == None:
            print('ciao')
            return []
        self.byLvl(root,0)
        nL = 0
        for i in range(len(self.lista)):
            if nL < self.lista[i][0]:
                nL = self.lista[i][0]
        res = []
        for i in range(nL,-1,-1):
            sub = []
            for j in range(len(self.lista)):
                if i == self.lista[j][0]:
                    sub.append(self.lista[j][1])
            res.append(sub)
        return res

    def byLvl(self,root,lvl):
        self.lista.append([lvl,root.val])
        if root.left != None:
            self.byLvl(root.left,lvl+1)
        if root.right != None:
            self.byLvl(root.right,lvl+1)
