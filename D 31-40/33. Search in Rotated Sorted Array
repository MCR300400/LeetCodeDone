class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        m = nums.index(max(nums))
        if len(nums) == 1:
            if nums[0] == target:
                return 0
            return -1
        if target in nums[:m+1]:
            if target == nums[0]:
                return 0
            if target == nums[m]:
                return m
            return self.binaria(nums[:m+1],target,0,len(nums[:m+1])-1)
        if m == len(nums)-1:
            return -1
        if target == nums[m+1]:

            return m+1
        if target == nums[len(nums)-1]:

            return len(nums)-1
        res = self.binaria(nums[m+1:],target,0,len(nums[m+1:])-1)
        if res == -1:
            return res
        return m + 1 + res

    def binaria(self,lista, k, inf, sup):
        if(inf > sup):
            return -1
        else:
            centro=(inf+sup)//2
            if(lista[centro] < k):
                return self.binaria(lista, k, centro+1, sup) 
            elif(lista[centro] == k):

                return centro
            else:
                return self.binaria(lista, k, 0, centro-1)

        
        
