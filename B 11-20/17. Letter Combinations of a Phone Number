class Solution(object):
    tow = 'abc'
    three = 'def'
    four = 'ghi'
    five = 'jkl'
    six = 'mno'
    seven = 'pqrs'
    eight = 'tuv'
    nine = 'wxyz'
    number = {'2':tow,'3':three,'4':four,'5':five,'6':six,'7':seven,'8':eight,'9': nine}

    def letterCombinations(self, digits):
        """
        :type digits: str
        :rtype: List[str]
        """
        l = len(digits)
        if l == 0:
            return []
        uno = []
        for i in range(len(self.number[digits[0]])):
            uno.append(self.number[digits[0]][i])
        if l == 1:
            return uno  
        due = []
        for i in range(len(uno)):
            for j in range(len(self.number[digits[1]])):
                due.append(uno[i] + self.number[digits[1]][j])
        if l == 2:
            return due
        tre = []
        for i in range(len(due)):
            for j in range(len(self.number[digits[2]])):
                tre.append(due[i]+self.number[digits[2]][j])
        if l == 3:
            return tre
        quattro = []
        for i in range(len(tre)):
            for j in range(len(self.number[digits[3]])):
                quattro.append(tre[i]+self.number[digits[3]][j])
        if l == 4:
            return quattro
